#include <iostream>
#include <cstdlib>
#include <ctime>

using namespace std;


/*-----------------------Task 1-----------------------

const int SIZE = 10;
int numbers[SIZE];

int main() {
    int minNum, maxNum;

    srand(time(0));

    for (int i = 0; i < SIZE; ++i) {
        numbers[i] = rand() % 100;
    }
    cout << "Array elements: ";
    for (int i = 0; i < SIZE; ++i) {
        cout << numbers[i] << " ";
    }

    cout << endl;

    minNum = maxNum = numbers[0];

    for (int i = 1; i < SIZE; ++i) {
        if (numbers[i] < minNum) {
            minNum = numbers[i];
        }
        if (numbers[i] > maxNum) {
            maxNum = numbers[i];
        }
    }

    cout << "Minimum element: " << minNum << endl;
    cout << "Maximum element: " << maxNum << endl;

    return 0;
}*/


/*-----------------------Task 2-----------------------

int main() {
    const int MONTHS = 12;
    int profits[MONTHS];

    cout << "Enter profits for each month:" << endl;
    for (int i = 0; i < MONTHS; ++i) {
        cout << "Month " << i + 1 << ": ";
        cin >> profits[i];
    }

    int startMonth, endMonth;
    cout << "Enter the range (start and end months): ";
    cin >> startMonth >> endMonth;

    if (startMonth < 1 || endMonth > MONTHS || startMonth > endMonth) {
        cout << "Invalid range." << endl;

    }

    int maxIndex = startMonth - 1, minIndex = startMonth - 1;
    for (int i = startMonth - 1; i < endMonth; ++i) {
        if (profits[i] > profits[maxIndex]) {
            maxIndex = i;
        }
        if (profits[i] < profits[minIndex]) {
            minIndex = i;
        }
    }

    cout << "Month with maximum profit in the range: " << maxIndex + 1 << endl;
    cout << "Month with minimum profit in the range: " << minIndex + 1 << endl;
}*/


/*-----------------------Task 3-----------------------

int main() {
    float arr[10]{ -1.23,3,7.12,17.19,2.9,19,8,4,-17.2,-2.5 };
    float sumM = 0;
    int minPos, maxPos;
    float max = arr[0], min = arr[0];
    float multyEven = 1;
    float SumMin = 1;
    float sumMul = 1;
    int firstNegativeIndex = -1;
    int lastNegativeIndex = -1;

    for (size_t i = 0; i < 10; i++)
    {
        if (arr[i] < 0)
            sumM += arr[i];

    }

    for (size_t i = 0; i < 10; i++)
    {
        if (max < arr[i]) {
            max = arr[i];
            maxPos = i;
        }
    }
    for (size_t i = 0; i < 10; i++)
    {
        if (min > arr[i]) {
            min = arr[i];
            minPos = i;
        }
    }

    if (minPos < maxPos) {
        for (int i = minPos; i < maxPos; i++)
        {
            sumMul *= arr[i];

        }
    }
    else {
        for (int i = maxPos; i < minPos; i++)
        {
            sumMul *= arr[i];

        }
    }
    for (size_t i = 0; i < 10; i++)
    {
        if (i % 2 == 0)
        {
            multyEven *= arr[i];
        }
    }

    for (int i = 0; i < 10; ++i) {
        if (arr[i] < 0) {
            firstNegativeIndex = i;
            break;
        }
    }

    for (int i = 10 - 1; i >= 0; --i) {
        if (arr[i] < 0) {
            lastNegativeIndex = i;
            break;
        }
    }

    for (int i = firstNegativeIndex + 1; i < lastNegativeIndex; ++i) {
        SumMin += arr[i];
    }

         cout << "sum minus = " << sumM << endl;
         cout << "multy from min to max position  : " << sumMul << endl;
         cout << "multy Even  : " << multyEven << endl;
         cout << "Sum of elements between first and last negative elements: " << SumMin << endl;
}*/

//----------------------- END -----------------------
